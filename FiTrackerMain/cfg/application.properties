#GENERAL
spring.application.name=FiTracker
password.pepper=jkFESA67tfe78uy5sa

#DATABASE

spring.datasource.url=jdbc:postgresql://fit-main-db:5432/fit
spring.datasource.username=fituser
spring.datasource.password=examplePassword
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.properties.hibernate.default_schema=app_core
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
login.jwt.secret=U1VQRVJfU0VDUkVUX0tFWV9TVVBFUl9TRUNSRVRfS0VZ
login.expiration=3600000


logging.level.org.springframework.vault=DEBUG
logging.level.org.springframework.web.client=DEBUG
spring.cloud.vault.uri=http://fit-vault:8200
spring.cloud.vault.authentication=APPROLE

# AppRole authentication
spring.cloud.vault.app-role.role-id=4f80a821-738f-c932-b8fd-04aecf6ac2c6
spring.cloud.vault.app-role.secret-id=390ef42c-503f-b447-69e3-9c3f94a3c3d5

# Key-Value backend configuration
spring.cloud.vault.kv.enabled=true
spring.cloud.vault.kv.backend=secret
spring.cloud.vault.kv.application-name=fit-app-main
jwks.api.uri=http://localhost:8080/oauth2/jwks

# Transit backend configuration
spring.cloud.vault.transit.enabled=true
spring.cloud.vault.transit.backend=transit
spring.cloud.vault.transit.key=jwt-rsa-key

# Konfiguracja klienta OAuth2 (odpowiednik RegisteredClient)
#spring.security.oauth2.authorizationserver.issuer=http://localhost:8080
#spring.security.oauth2.authorization.server.issuer-uri=http://localhost:8080
#spring.security.oauth2.authorizationserver.client.registration.zone-service.client-id=zone-service
#spring.security.oauth2.authorizationserver.client.registration.zone-service.client-secret=secretClientKey
#spring.security.oauth2.authorizationserver.client.registration.zone-service.redirect-uris=http://localhost:8080/login/oauth2/code/zone
#spring.security.oauth2.authorizationserver.client.registration.zone-service.scopes=openid,profile
#spring.security.oauth2.authorizationserver.client.registration.zone-service.require-authorization-consent=true
#spring.security.oauth2.authorizationserver.client.registration.zone-service.authorization-grant-types=authorization_code,refresh_token
#spring.security.oauth2.authorizationserver.client.registration.zone-service.client-authentication-methods=client_secret_basic

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=TRACE