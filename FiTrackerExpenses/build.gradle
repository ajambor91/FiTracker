plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'

}

group = 'aj.FiTrackerExpenses'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	compileOnly 'jakarta.servlet:jakarta.servlet-api:6.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'com.nimbusds:nimbus-jose-jwt:10.0.2'
	implementation 'org.bouncycastle:bcpkix-jdk18on:1.80'
	implementation 'ch.qos.logback:logback-classic:1.5.18'
	implementation 'com.github.loki4j:loki-logback-appender:1.5.2'
	testImplementation 'org.testcontainers:junit-jupiter:1.20.6'
	testImplementation "org.testcontainers:kafka:1.20.6"
	testImplementation 'org.testcontainers:postgresql:1.20.6'

}

tasks.register('unitTest', Test) {
	useJUnitPlatform {
		excludeTags 'integration'
	}
	systemProperty 'spring.profiles.active', 'unit'
}

tasks.register('integrationTest', Test) {
	useJUnitPlatform {
		includeTags 'integration'
	}
	systemProperty 'spring.profiles.active', 'integration'
	shouldRunAfter 'unitTest'
}

tasks.register('buildWithoutTests') {
	group = 'build'
	description = 'Builds the project without running any tests.'

	dependsOn assemble
}

test {
	dependsOn unitTest
}

tasks.jacocoTestReport {
	dependsOn tasks.named('test'), tasks.named('integrationTest')
	executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

	reports {
		xml.required = true
		csv.required = false
		html.required = true
		html.outputLocation = layout.buildDirectory.dir('reports/jacoco')
	}
}

tasks.jacocoTestCoverageVerification {
	dependsOn tasks.jacocoTestReport
	violationRules {
		rule {
			limit {
				minimum = 0.5
			}
		}
	}
}

check {
	dependsOn tasks.jacocoTestCoverageVerification
}


sourceSets {
	test {
		resources {
			srcDirs = ['src/test/resources']
		}
	}
}
